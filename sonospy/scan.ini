[gettags]
# Settings that relate to gathering tag data from music files

# On Linux file creation times are not maintained. However, if you are serving
# a windows share via Linux, it is possible that the file access time as
# reported by Linux is actually the Windows file creation time. Setting
# linux_file_creation_time to atime will cause the tag creation time to be set
# from atime. Uncomment the next line to do that.

#linux_file_creation_time=atime

# By default the tag creation time on Linux is set to null and the last
# modified time is set from st_mtime. If you want to set the tag creation
# time from st_mtime and the last modified time from st_ctime, set
# linux_file_modification_time to ctime

linux_file_modification_time=ctime

# By default tags are gathered from all tracks encountered, including
# duplicates. If you want to ignore duplicate tracks, set
# ignore_duplicate_tracks to Y
# Note that after changing this option you will have to perform a full
# rescan

ignore_duplicate_tracks=Y

# If you are ignoring duplicate tracks and want to influence which file
# type takes precedence, set duplicate_tracks_precedence to the precedence
# you want, with higher precedences first. If you want the first track
# encountered to be selected, set duplicate_tracks_precedence to nothing.
# (note file types are case insensitive)

duplicate_tracks_precedence=FLAC,ogg,wma,mp3

# By default tags will be gathered from all tracks encountered. If you want
# to ignore music tracks that do not contain tags, set ignore_blank_tags
# to Y
# Note that after changing this option you will have to perform a full
# rescan

ignore_blank_tags=Y

# By default the scanner will try to read tags from all files it encounters,
# rejecting those that are not music files (but note that it will attempt to
# read incomplete music files). If you want to force the scanner to ignore
# specific filenames or extensions, specify them below:
# (note file names and extensions are case insensitive)

file_name_exclusions=.ds_store,desktop.ini,thumbs.db
file_extension_exclusions=.part,.txt,.csv,.jpg,.png,.gif,.ffp,.md5,.wmv,.mpg,.mp4,.sfv

# If the scanner encounters special files containing work or virtual albums,
# it will read those files and create the work and virtual albums in the
# database. By default such files are suffixed .sp, if you want to use
# different extensions uncomment the line below and specify a different
# extension:
# (note extensions are case insensitive)

#work_file_extension=.sp
#virtual_file_extension=.sp

# If you want to follow symlinks when scanning, set follow_symlinks to Y.
# Note that the scanner will exit if it encounters an endless loop of
# symlinks.

#follow_symlinks=Y

[movetags]
# Settings that relate to creating a database to browse from tags gathered
# from music files

# if your tags contain multiple entries within a tag entry, set which
# character is used to delimit them in multiple_tag_separator (note that
# you can also use a newline character to separate entries in tags, and
# that multiple tags of the same name will also be processed)

multiple_tag_separator=;

# if you have multiple tag entries per track, you can use the following
# keys to set which of those entries are used to populate the database.
# Allowable values are:
#
#     first - only the first entry is added to the database
#     last - only the last entry is added to the database
#     all - all entries are added to the database
#
# Fields where multiple tags can create multiple entries in the indexes
# are:
#
#     album / albumartist / artist / composer / genre

include_album=all
include_albumartist=all
include_artist=all
include_composer=all
include_genre=all

# if you have both art embedded in music files and art in folders, you
# can choose which one takes precedence with prefer_folderart

prefer_folderart=Y

# you can control what happens to artist names beginning 'The' by setting
# the the_processing key. Allowable values are:
#     before - 'The' is kept in the artist name
#     after - 'The' is moved to the end of the artist name
#     remove - 'The' is removed from the artist name

the_processing=remove

# when running the proxy, you can choose how to group tracks into albums
# using the album_identification key. If you choose there to group all 
# tracks from an album regardless of artist, you will end up with some
# albums with generic titles (such as 'Greatest Hits') containing tracks
# from multiple albums in the albums index. If you want to separate out
# albums with generic titles in that scenario, specify those album names
# in the separate_album_list key (comma separated, if title contains
# comma precede with \). 
# Note that you will have to perform a regen scan if you change this setting
# on an existing database, and also that you will have to enable 
# show_separate_albums in the proxy ini file for the albums to be displayed.

#separate_album_list=Greatest Hits,Best Of

[virtual name format]
# allows setting of the generic format of a virtual name in an index
# these default to using the name of the virtual specified in the .sp file
# across all indexes
# Notes - if you change these after doing a scan then you will have to do a 
#         regen scan (-r) to see the results in the library
#       - if you change the tags in a .sp file then you will have to to a
#         rescan to see any changes in these fields in the library

ALBUM="%s" % (virtual)
ALBUMARTIST_ALBUM="%s" % (virtual)
ARTIST_ALBUM="%s" % (virtual)
COMPOSER_ALBUM="%s" % (virtual)

[work name format]
# allows setting of the generic format of a work name in an index
# these default to adding genre and composer or artist information to the name
# of the work specified in the .sp file
# Notes - if you change these after doing a scan then you will have to do a 
#         regen scan (-r) to see the results in the library
#       - if you change the tags in a .sp file then you will have to to a
#         rescan to see any changes in these fields in the library

ALBUM="%s - %s - %s" % (composer, work, artist)
ALBUMARTIST_ALBUM="%s - %s - %s" % (composer, genre, work)
ARTIST_ALBUM="%s - %s - %s" % (composer, genre, work)
COMPOSER_ALBUM="%s - %s - %s" % (genre, work, artist)

# for virtual and work name formats it is possible to specify a special field
# that is created from manipulating a tag, and to use that field in the format.
# The special field name should start with an underscore, and a format line that
# shows how to manipulate the tag should be specified (using Python syntax)
#
# for example, to create a special field that will split a genre on a forward
# slash surrounded by spaces and return the last entry of the split, specify
#
#   _shortgenre=genre.split(' / ')[-1]
#
# in the same section as the name format you wish to amend, 
# and use _shortgenre in that name format
#
#   COMPOSER_ALBUM="%s - %s - %s" % (_shortgenre, work, artist)
#
# - in this example if genre contained 'classical / piano', _shortgenre would
# contain 'piano'
#
# Notes - if you add a special field after doing a scan then you will have to do 
#         a regen scan (-r) to see the results in the library
#       - if you change the tags in a .sp file that relate to a special field
#         then you will have to to a rescan to see any changes in that field in
#         the library

